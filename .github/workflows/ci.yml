name: CI

on:
    pull_request:
        branches: [main]

jobs:
    test:
        runs-on: ubuntu-latest

        env:
            # Note: Typo in original - 'BT_PROFILES_DIR' should be 'DBT_PROFILES_DIR'
            DBT_PROFILES_DIR: ${{ github.workspace }}/.dbt
            GCP_PROJECT_ID: dbt-core-bq-learn

        steps:
            # Step 1: Checkout the repo
            - name: Checkout repo
              uses: actions/checkout@v3

            # Step 2: Set up the Python environment
            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.11"

            # Step 3: Upgrade pip and install dbt
            - name: Install dbt and dependencies
              run: |
                  python -m pip install --upgrade pip setuptools wheel
                  python -m venv dbt_bigquery_venv
                  source dbt_bigquery_venv/bin/activate
                  pip install dbt-core dbt-bigquery

            # Step 4: Create .dbt directory and credentials file
            - name: Create GCP key and profiles.yml
              env:
                  DBT_PROD_KEYFILE: ${{ secrets.DBT_PROD_KEYFILE }}
              run: |
                  mkdir -p ${{ github.workspace }}/.dbt
                  echo "${DBT_PROD_KEYFILE}" > ${{ github.workspace }}/.dbt/service_account.json
                  cat ${{ github.workspace }}/.dbt/service_account.json | tr -d '\r' > ${{ github.workspace }}/.dbt/service_account.json.tmp
                  mv ${{ github.workspace }}/.dbt/service_account.json.tmp ${{ github.workspace }}/.dbt/service_account.json
                  chmod 600 ${{ github.workspace }}/.dbt/service_account.json
                  cat <<EOF > ${{ github.workspace }}/.dbt/profiles.yml
                  dbt_core_bigquery:
                    outputs:
                      dev:
                        dataset: dbt_core_clau
                        job_execution_timeout_seconds: 300
                        job_retries: 1
                        keyfile: ${{ github.workspace }}/.dbt/service_account.json
                        location: US
                        method: service-account
                        priority: interactive
                        project: ${{ env.GCP_PROJECT_ID }}
                        threads: 1
                        type: bigquery
                    target: dev
                  EOF

            # Step 5: Validate credentials file
            - name: Validate credentials file
              run: |
                  cat ${{ github.workspace }}/.dbt/service_account.json | jq .
                  echo "Credentials file validated successfully"

            # Step 6: Check credentials file existence
            - name: Check credentials file existence
              run: |
                  ls -l ${{ github.workspace }}/.dbt/service_account.json
                  head -n 5 ${{ github.workspace }}/.dbt/service_account.json

            # Step 7: Set up Google Cloud SDK
            - name: Set up Google Cloud SDK
              uses: google-github-actions/setup-gcloud@v1

            # Step 8: Test BigQuery connection
            - name: Test BigQuery connection
              run: |
                  gcloud auth activate-service-account --key-file=${{ github.workspace }}/.dbt/service_account.json
                  bq show --project_id=${{ env.GCP_PROJECT_ID }} ${{ env.GCP_PROJECT_ID }}:dbt_core_clau

            # Step 9: Install dbt project dependencies
            - name: Install dbt project dependencies
              run: |
                  source dbt_bigquery_venv/bin/activate
                  dbt deps --project-dir=${{ github.workspace }}

            # Step 10: Run dbt debug
            - name: Run dbt debug
              run: |
                  source dbt_bigquery_venv/bin/activate
                  dbt debug --profiles-dir=${{ env.DBT_PROFILES_DIR }} --target dev

            # Step 11: Run dbt tests
            - name: Run dbt tests
              run: |
                  source dbt_bigquery_venv/bin/activate
                  dbt build --profiles-dir=${{ env.DBT_PROFILES_DIR }} --target dev --debug
